#!/usr/bin/env python3
"""
Script de Instala√ß√£o - VTEX Freight Calculator
Este script instala automaticamente todas as depend√™ncias necess√°rias
"""

import subprocess
import sys
import os
from pathlib import Path

def check_python_version():
    """Verifica se a vers√£o do Python √© compat√≠vel"""
    if sys.version_info < (3, 8):
        print("‚ùå Python 3.8 ou superior √© necess√°rio!")
        print(f"   Vers√£o atual: {sys.version}")
        return False
    print(f"‚úÖ Python {sys.version.split()[0]} detectado")
    return True

def install_requirements():
    """Instala as depend√™ncias do requirements.txt"""
    print("üì¶ Instalando depend√™ncias...")
    
    try:
        # Verificar se requirements.txt existe
        if not os.path.exists('requirements.txt'):
            print("‚ùå Arquivo requirements.txt n√£o encontrado!")
            return False
        
        # Instalar depend√™ncias
        result = subprocess.run([
            sys.executable, '-m', 'pip', 'install', '-r', 'requirements.txt'
        ], check=True, capture_output=True, text=True)
        
        print("‚úÖ Depend√™ncias instaladas com sucesso!")
        return True
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Erro ao instalar depend√™ncias: {e}")
        print(f"Sa√≠da de erro: {e.stderr}")
        return False
    except Exception as e:
        print(f"‚ùå Erro inesperado: {e}")
        return False

def create_config_example():
    """Cria arquivo de configura√ß√£o de exemplo se n√£o existir"""
    if not os.path.exists('empresa_config.json'):
        if os.path.exists('empresa_config_exemplo.json'):
            import shutil
            shutil.copy('empresa_config_exemplo.json', 'empresa_config.json')
            print("‚úÖ Arquivo de configura√ß√£o de exemplo criado")
        else:
            print("‚ö†Ô∏è  Arquivo de configura√ß√£o de exemplo n√£o encontrado")

def test_installation():
    """Testa se a instala√ß√£o foi bem-sucedida"""
    print("üß™ Testando instala√ß√£o...")
    
    try:
        # Testar importa√ß√µes principais
        import PySide6
        print("‚úÖ PySide6 importado com sucesso")
        
        import requests
        print("‚úÖ Requests importado com sucesso")
        
        # Testar se os m√≥dulos locais existem
        required_modules = [
            'main.py',
            'config_manager.py',
            'ui_components.py',
            'utils.py',
            'threads.py'
        ]
        
        missing_modules = []
        for module in required_modules:
            if not os.path.exists(module):
                missing_modules.append(module)
        
        if missing_modules:
            print(f"‚ùå M√≥dulos n√£o encontrados: {missing_modules}")
            return False
        
        print("‚úÖ Todos os m√≥dulos encontrados")
        return True
        
    except ImportError as e:
        print(f"‚ùå Erro ao importar depend√™ncias: {e}")
        return False
    except Exception as e:
        print(f"‚ùå Erro inesperado: {e}")
        return False

def main():
    """Fun√ß√£o principal de instala√ß√£o"""
    print("üöÄ VTEX Freight Calculator - Instala√ß√£o")
    print("=" * 50)
    
    # Verificar vers√£o do Python
    if not check_python_version():
        return False
    
    # Instalar depend√™ncias
    if not install_requirements():
        return False
    
    # Criar configura√ß√£o de exemplo
    create_config_example()
    
    # Testar instala√ß√£o
    if not test_installation():
        return False
    
    print("\nüéâ Instala√ß√£o conclu√≠da com sucesso!")
    print("\nüìã Pr√≥ximos passos:")
    print("1. Configure sua empresa na aba 'Configura√ß√µes'")
    print("2. Adicione suas lojas VTEX")
    print("3. Configure seus tokens de API")
    print("4. Execute: python main.py")
    print("\nüìñ Para mais informa√ß√µes, consulte o README.md")
    
    return True

if __name__ == "__main__":
    success = main()
    if not success:
        print("\n‚ùå Instala√ß√£o falhou!")
        sys.exit(1)
    else:
        print("\n‚úÖ Instala√ß√£o bem-sucedida!")
        sys.exit(0)
